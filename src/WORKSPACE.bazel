# Copyright 2010-2021, Google Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
#     * Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following disclaimer
# in the documentation and/or other materials provided with the
# distribution.
#     * Neither the name of Google Inc. nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# WORKSPACE.bazel is a legacy dependency configuration system but the default system for Mozc yet.
# To use the new system (Bzlmod), specify --enable_bzlmod to the Bazel command or modify .bazelrc.

# An identifier for this repository.
workspace(name = "mozc")

load(
    "@bazel_tools//tools/build_defs/repo:http.bzl",
    "http_archive",
    "http_file",
)
load("@//:config.bzl", "SHA256_ZIP_CODE_KEN_ALL", "SHA256_ZIP_CODE_JIGYOSYO")
load("@//bazel:pkg_config_repository.bzl", "pkg_config_repository")


# Bazel Skylib (1.7.1 2024-07-03)
# https://github.com/bazelbuild/bazel-skylib
http_archive(
    name = "bazel_skylib",
    sha256 = "bc283cdfcd526a52c3201279cda4bc298652efa898b10b4db0837dc51652756f",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.7.1/bazel-skylib-1.7.1.tar.gz",
    ],
)
load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

# Bazel Python rules (0.34.0 2024-07-04)
http_archive(
    name = "rules_python",
    sha256 = "778aaeab3e6cfd56d681c89f5c10d7ad6bf8d2f1a72de9de55b23081b2d31618",
    strip_prefix = "rules_python-0.34.0",
    url = "https://github.com/bazelbuild/rules_python/releases/download/0.34.0/rules_python-0.34.0.tar.gz",
)
load("@rules_python//python:repositories.bzl", "py_repositories")
py_repositories()


# oss_macos or oss_android
load("//:build_defs.bzl", "macos_deps", "android_deps")
_impl = select({
    "//bazel/cc_target_os:oss_macos": [ macos_deps(), ],
    "//bazel/cc_target_os:oss_android": [ android_deps(), ],
    "//conditions:default": [],
})


load("@bazel_features//:deps.bzl", "bazel_features_deps")
select({
    "//bazel/cc_target_os:oss_macos": [ bazel_features_deps() ],
    "//conditions:default": [],
})


# Abseil
# https://abseil.io/docs/cpp/quickstart#set-up-a-bazel-workspace-to-work-with-abseil
local_repository(
    name = "com_google_absl",
    path = "third_party/abseil-cpp",
)


# Protocol Buffers
# https://github.com/protocolbuffers/protobuf/blob/main/examples/WORKSPACE
local_repository(
    name = "com_google_protobuf",
    path = "third_party/protobuf",
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()


# GoogleTest
local_repository(
    name = "com_google_googletest",
    path = "third_party/gtest",
)


# platforms (0.0.10 2024-04-26)
# https://github.com/bazelbuild/platforms/
http_archive(
    name = "platforms",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/platforms/releases/download/0.0.10/platforms-0.0.10.tar.gz",
        "https://github.com/bazelbuild/platforms/releases/download/0.0.10/platforms-0.0.10.tar.gz",
    ],
    sha256 = "218efe8ee736d26a3572663b374a253c012b716d8af0c07e842e82f238a0a7ee",
)


# Windows Implementation Library (WIL)
# https://github.com/microsoft/wil/
new_local_repository(
  name = "com_microsoft_wil",
  build_file = "@//bazel:BUILD.wil.bazel",
  path = "third_party/wil",
)


# iBus
pkg_config_repository(
  name = "ibus",
  packages = ["glib-2.0", "gobject-2.0", "ibus-1.0"],
)

# Japanese Usage Dictionary
new_local_repository(
    name = "ja_usage_dict",
    build_file = "@//bazel:BUILD.ja_usage_dict.bazel",
    path = "third_party/japanese_usage_dictionary",
)

# Qt for Linux
pkg_config_repository(
  name = "qt_linux",
  packages = ["Qt6Core", "Qt6Gui", "Qt6Widgets"],
)

# Qt for Windows
new_local_repository(
    name = "qt_win",
    build_file = "@//bazel:BUILD.qt_win.bazel",
    path = "third_party/qt",
)

# Material icons
http_file(
    name = "material_icon_dictionary_png",
    downloaded_file_path = "dictionary.png",
    sha256 = "6d2ac7befa038d4f32e07136293acaf5d8645a4daecb6d063f34be2ffea59b55",
    urls = [
        "https://raw.githubusercontent.com/google/material-design-icons/4.0.0/png/action/chrome_reader_mode/materialiconsoutlined/48dp/1x/outline_chrome_reader_mode_black_48dp.png",
    ],
)

http_file(
    name = "material_icon_dictionary_svg",
    downloaded_file_path = "dictionary.svg",
    sha256 = "a4c7b9bfb442a7497b72d74358c31034c4fef1ab2a50659834784580751ac04d",
    urls = [
        "https://raw.githubusercontent.com/google/material-design-icons/4.0.0/src/action/chrome_reader_mode/materialiconsoutlined/24px.svg",
    ],
)

http_file(
    name = "material_icon_properties_png",
    downloaded_file_path = "properties.png",
    sha256 = "c4ae8bb7992f43157be9d026f76a7039af6e0e3de0f220842208dfda8c38714a",
    urls = [
        "https://raw.githubusercontent.com/google/material-design-icons/4.0.0/png/action/settings/materialiconsround/48dp/1x/round_settings_black_48dp.png",
    ],
)

http_file(
    name = "material_icon_properties_svg",
    downloaded_file_path = "properties.svg",
    sha256 = "9b01b133be1caffc680f132d385d0e594262d6cfd29759a63c428050b83fe628",
    urls = [
        "https://raw.githubusercontent.com/google/material-design-icons/4.0.0/src/action/settings/materialiconsround/24px.svg",
    ],
)

http_file(
    name = "material_icon_tool_png",
    downloaded_file_path = "tool.png",
    sha256 = "269433bf6d6948a93ab6a57a73ceb5930870223046052cfffe01eeca37327d3e",
    urls = [
        "https://raw.githubusercontent.com/google/material-design-icons/4.0.0/png/action/build/materialicons/48dp/1x/baseline_build_black_48dp.png",
    ],
)

http_file(
    name = "material_icon_tool_svg",
    downloaded_file_path = "tool.svg",
    sha256 = "df34fba3d09778db69503a23b688761051dbf65b5bccb0d7b729c69ff61c3804",
    urls = [
        "https://raw.githubusercontent.com/google/material-design-icons/4.0.0/src/action/build/materialicons/24px.svg",
    ],
)

# Zip code
http_archive(
    name = "zip_code_ken_all",
    build_file_content = "exports_files([\"KEN_ALL.CSV\"])",
    sha256 = SHA256_ZIP_CODE_KEN_ALL,
    url = "https://www.post.japanpost.jp/zipcode/dl/kogaki/zip/ken_all.zip",
)

http_archive(
    name = "zip_code_jigyosyo",
    build_file_content = "exports_files([\"JIGYOSYO.CSV\"])",
    sha256 = SHA256_ZIP_CODE_JIGYOSYO,
    url = "https://www.post.japanpost.jp/zipcode/dl/jigyosyo/zip/jigyosyo.zip",
)


load("//:macos.bzl", "apple_dependencies")
select({
    "//bazel/cc_target_os:oss_macos": [apple_dependencies()],
    "//conditions:default": [],
})
